/*
 *		タイムウィンドウ通知に関するテストのシステムコンフィギュレーショ
 *		ンファイル
 *
 *  $Id: test_twdnfy.cfg 767 2019-10-02 02:49:25Z ertl-hiro $
 */
INCLUDE("tecsgen.cfg");

#include "test_twdnfy.h"

DEF_SCY({ 20 * TEST_TIME_CP });
CRE_SOM(SOM1, { TA_INISOM });
ATT_TWD({ DOM1, SOM1, 1, 5 * TEST_TIME_CP, { TNFY_ACTTSK, TASK11 }});
ATT_TWD({ DOM2, SOM1, 2, 5 * TEST_TIME_CP, { TNFY_WUPTSK, TASK2 }});
CRE_SOM(SOM2, { TA_NULL });
ATT_TWD({ DOM1, SOM2, 1, 1, { TNFY_ACTTSK, TASK13 }});
ATT_TWD({ DOM2, SOM2, 2, 5 * TEST_TIME_CP, { TNFY_WUPTSK, TASK2 }});
ATT_TWD({ DOM1, SOM2, 3, 5 * TEST_TIME_CP });

DOMAIN(DOM1) {
	CRE_TSK(TASK11, { TA_NULL, 1, task11, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK11, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_TSK(TASK12, { TA_NULL, 1, task12, MID_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK12, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_TSK(TASK13, { TA_NULL, 1, task13, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK13, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_CYC(CYC11, { TA_STA, { TNFY_ACTTSK, TASK12 },
									40 * TEST_TIME_CP, 20 * TEST_TIME_CP });
}
DOMAIN(DOM2) {
	CRE_TSK(TASK2, { TA_ACT, 1, task2, HIGH_PRIORITY, STACK_SIZE, NULL });
}
KERNEL_DOMAIN {
	SAC_SYS({ TACP_SHARED, TACP_KERNEL, TACP_KERNEL, TACP_SHARED });
	DEF_SVC(TFN_EXTSVC1, { TA_NULL, extsvc1_routine, STACK_SIZE / 4 });
}
ATT_MOD("test_twdnfy.o");

INCLUDE("test_common2.cfg");
