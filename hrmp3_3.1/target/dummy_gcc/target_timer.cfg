/*
 *		タイマドライバ（ダミーターゲット用）のコンフィギュレーションファイル
 *
 *  $Id: target_timer.cfg 391 2019-07-10 06:14:58Z ertl-hiro $
 */

#include "target_timer.h"

/*
 *  高分解能タイマドライバ
 */
KERNEL_DOMAIN {
	CLASS(CLS_PRC1) {
		ATT_INI({ TA_NULL, 0, _kernel_target_hrt_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_hrt_terminate });

		CFG_INT(INTNO_HRT_PRC1, { TA_ENAINT | INTATR_HRT, INTPRI_HRT });
		DEF_INH(INHNO_HRT_PRC1, { TA_NULL, _kernel_target_hrt_handler });
	}
}

#if TNUM_PRCID >= 2
KERNEL_DOMAIN {
	CLASS(CLS_PRC2) {
		ATT_INI({ TA_NULL, 0, _kernel_target_hrt_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_hrt_terminate });

		CFG_INT(INTNO_HRT_PRC2, { TA_ENAINT|INTATR_HRT, INTPRI_HRT });
		DEF_INH(INHNO_HRT_PRC2, { TA_NULL, _kernel_target_hrt_handler });
	}
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
KERNEL_DOMAIN {
	CLASS(CLS_PRC3) {
		ATT_INI({ TA_NULL, 0, _kernel_target_hrt_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_hrt_terminate });

		CFG_INT(INTNO_HRT_PRC3, { TA_ENAINT|INTATR_HRT, INTPRI_HRT });
		DEF_INH(INHNO_HRT_PRC3, { TA_NULL, _kernel_target_hrt_handler });
	}
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
KERNEL_DOMAIN {
	CLASS(CLS_PRC4) {
		ATT_INI({ TA_NULL, 0, _kernel_target_hrt_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_hrt_terminate });

		CFG_INT(INTNO_HRT_PRC4, { TA_ENAINT|INTATR_HRT, INTPRI_HRT });
		DEF_INH(INHNO_HRT_PRC4, { TA_NULL, _kernel_target_hrt_handler });
	}
}
#endif /* TNUM_PRCID >= 4 */

/*
 *  タイムウィンドウタイマドライバ
 */
KERNEL_DOMAIN {
	CLASS(CLS_PRC1) {
		ATT_INI({ TA_NULL, 0, _kernel_target_twdtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_twdtimer_terminate });

		CFG_INT(INTNO_TWDTIMER_PRC1,
							{ TA_ENAINT|INTATR_TWDTIMER, INTPRI_TWDTIMER });
		DEF_INH(INHNO_TWDTIMER_PRC1,
							{ TA_NULL, _kernel_target_twdtimer_handler });
	}
}

#if TNUM_PRCID >= 2
KERNEL_DOMAIN {
	CLASS(CLS_PRC2) {
		ATT_INI({ TA_NULL, 0, _kernel_target_twdtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_twdtimer_terminate });

		CFG_INT(INTNO_TWDTIMER_PRC2,
							{ TA_ENAINT|INTATR_TWDTIMER, INTPRI_TWDTIMER });
		DEF_INH(INHNO_TWDTIMER_PRC2,
							{ TA_NULL, _kernel_target_twdtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
KERNEL_DOMAIN {
	CLASS(CLS_PRC3) {
		ATT_INI({ TA_NULL, 0, _kernel_target_twdtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_twdtimer_terminate });

		CFG_INT(INTNO_TWDTIMER_PRC3,
							{ TA_ENAINT|INTATR_TWDTIMER, INTPRI_TWDTIMER });
		DEF_INH(INHNO_TWDTIMER_PRC3,
							{ TA_NULL, _kernel_target_twdtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
KERNEL_DOMAIN {
	CLASS(CLS_PRC4) {
		ATT_INI({ TA_NULL, 0, _kernel_target_twdtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_twdtimer_terminate });

		CFG_INT(INTNO_TWDTIMER_PRC4,
							{ TA_ENAINT|INTATR_TWDTIMER, INTPRI_TWDTIMER });
		DEF_INH(INHNO_TWDTIMER_PRC4,
							{ TA_NULL, _kernel_target_twdtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 4 */

/*
 *  オーバランタイマドライバ
 */
#ifdef TOPPERS_SUPPORT_OVRHDR

KERNEL_DOMAIN {
	CLASS(CLS_PRC1) {
		ATT_INI({ TA_NULL, 0, _kernel_target_ovrtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_ovrtimer_terminate });

		CFG_INT(INTNO_OVRTIMER_PRC1,
							{ TA_ENAINT|INTATR_OVRTIMER, INTPRI_OVRTIMER });
		DEF_INH(INHNO_OVRTIMER_PRC1,
							{ TA_NULL, _kernel_target_ovrtimer_handler });
	}
}

#if TNUM_PRCID >= 2
KERNEL_DOMAIN {
	CLASS(CLS_PRC2) {
		ATT_INI({ TA_NULL, 0, _kernel_target_ovrtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_ovrtimer_terminate });
		CFG_INT(INTNO_OVRTIMER_PRC2,
							{ TA_ENAINT|INTATR_OVRTIMER, INTPRI_OVRTIMER });
		DEF_INH(INHNO_OVRTIMER_PRC2,
							{ TA_NULL, _kernel_target_ovrtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
KERNEL_DOMAIN {
	CLASS(CLS_PRC3) {
		ATT_INI({ TA_NULL, 0, _kernel_target_ovrtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_ovrtimer_terminate });
		CFG_INT(INTNO_OVRTIMER_PRC3,
							{ TA_ENAINT|INTATR_OVRTIMER, INTPRI_OVRTIMER });
		DEF_INH(INHNO_OVRTIMER_PRC3,
							{ TA_NULL, _kernel_target_ovrtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
KERNEL_DOMAIN {
	CLASS(CLS_PRC4) {
		ATT_INI({ TA_NULL, 0, _kernel_target_ovrtimer_initialize });
		ATT_TER({ TA_NULL, 0, _kernel_target_ovrtimer_terminate });
		CFG_INT(INTNO_OVRTIMER_PRC4,
							{ TA_ENAINT|INTATR_OVRTIMER, INTPRI_OVRTIMER });
		DEF_INH(INHNO_OVRTIMER_PRC4,
							{ TA_NULL, _kernel_target_ovrtimer_handler });
	}
}
#endif /* TNUM_PRCID >= 4 */

#endif /* TOPPERS_SUPPORT_OVRHDR */
