/*
 *		タスク関連の静的APIのパス2でのエラー検出のテスト(2)
 *
 *  $Id: pass2_task2.cfg 645 2019-12-09 16:50:28Z ertl-hiro $
 */

#include "cfg_common.h"

DOMAIN(DOM1) {
  CLASS(CLS_PRC1) {
	/* 生成するタスクがユーザタスクで，sstkszにターゲット定義の最小値 */
	/* よりも小さい値を指定した時［NGKI1044］*/
	CRE_TSK(TASK1, { TA_NULL, 1, task1, MID_PRIORITY,
										STACK_SIZE, NULL, 0, NULL });

	/* 生成するタスクがユーザタスクで，sstkszにターゲット定義の制約に */
	/* 合致しないサイズを指定した時［NGKI1065］*/
	CRE_TSK(TASK2, { TA_NULL, 2, task2, MID_PRIORITY,
									STACK_SIZE, NULL, 1, stack_TASK2 });

	/* 生成するタスクがユーザタスクで，sstkszの記述を省略した場合 */
	CRE_TSK(TASK3, { TA_NULL, 3, task3, MID_PRIORITY,
								STACK_SIZE, NULL, , stack_TASK3 });
  }
}

KERNEL_DOMAIN {
  CLASS(CLS_PRC1) {
	/* 生成するタスクがシステムタスクで，sstkにNULL以外を指定した場合 */
	/* ［NGKI1068］*/
	CRE_TSK(TASK4, { TA_NULL, 4, task4, MID_PRIORITY,
								STACK_SIZE, NULL, STACK_SIZE, stack_TASK4 });

	/* 生成するタスクがシステムタスクで，sstkszに0以外の値を指定した場 */
	/* 合で，stkがNULLでない場合［NGKI1071］*/
	CRE_TSK(TASK5, { TA_NULL, 5, task5, MID_PRIORITY,
								STACK_SIZE, stack_TASK5, STACK_SIZE, NULL });
  }
}
