/* 
 *		標準メモリリージョンに関するテスト(2)
 *
 *  $Id: cfg_stdreg2.cfg 645 2019-12-09 16:50:28Z ertl-hiro $
 */

#include "cfg_common.h"

//	== target_mem.cfg ==
//	ATT_REG("ROM", { TA_NOWRITE, 0x01000000, 0x00800000 });
//	ATT_REG("RAM", { TA_NULL, 0x01800000, 0x00800000 });
//	DEF_SRG("ROM", "RAM");
//	}
//
//	== target_timer.cfg ==
//	4つのプロセッサに対して，高分解能タイマドライバとタイムウィンドウ
//	タイマドライバのための，初期化ルーチン，終了処理ルーチン，割込みハ
//	ンドラの登録を行う．
//
//	== target_ipi.cfg ==
//	4つのプロセッサに対して，ディスパッチ要求，カーネル終了要求，高分
//	解能タイマ設定要求，システム周期開始要求の各プロセッサ間割込みの登
//	録を行う．

ATT_REG("ROM1", { TA_NOWRITE, 0x02000000, 0x00800000 });
ATT_REG("RAM1", { TA_NULL, 0x02800000, 0x00800000 });

ATT_REG("ROM2", { TA_NOWRITE, 0x03000000, 0x00800000 });
ATT_REG("RAM2", { TA_NULL, 0x03800000, 0x00800000 });

ATT_REG("ROM3", { TA_NOWRITE, 0x04000000, 0x00800000 });
ATT_REG("RAM3", { TA_NULL, 0x04800000, 0x00800000 });

ATT_REG("ROM4", { TA_NOWRITE, 0x05000000, 0x00800000 });
ATT_REG("RAM4", { TA_NULL, 0x05800000, 0x00800000 });

ATT_REG("ROM5", { TA_NOWRITE, 0x06000000, 0x00800000 });
ATT_REG("RAM5", { TA_NULL, 0x06800000, 0x00800000 });

KERNEL_DOMAIN {
	DEF_SRG("ROM1", "RAM1");		/* カーネルドメイン向け・クラス共通 */
}
DOMAIN(DOM1) {
	DEF_SRG("ROM2", "RAM2");		/* DOM1向け・クラス共通 */
}
CLASS(CLS_PRC1) {
	DEF_SRG("ROM3", "RAM3");		/* 保護ドメイン共通・CLS_PRC1向け */
}

INCLUDE("cfg_stdreg_common.cfg");

ATT_MOD("libc.a");
