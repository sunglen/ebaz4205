/*
 *		静的APIが適切なクラスの囲みの中に記述されていないエラー検出の
 *		テスト(1)
 *
 *  $Id: pass2_cls1.cfg 819 2020-07-20 14:02:42Z ertl-hiro $
 */

#include "cfg_common.h"

KERNEL_DOMAIN {
  CLASS(CLS_PRC1) {
	/*
	 *  エラーにならない静的API（SAC_XXXのテスト用）
	 */
	CRE_TSK(TASK1, { TA_NULL, 1, task1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_SEM(SEM1, { TA_NULL, 1, 1 });
	CRE_FLG(FLG1, { TA_NULL, 0U });
	CRE_DTQ(DTQ1, { TA_NULL, 10, NULL });
	CRE_PDQ(PDQ1, { TA_NULL, 10, 16, NULL });
	CRE_MTX(MTX1, { TA_NULL });
	CRE_MBF(MBF1, { TA_NULL, 10, TSZ_MBFMB(10,10), NULL });
	CRE_SPN(SPN1, { TA_NULL });
	CRE_MPF(MPF1, { TA_NULL, 10, 100, NULL, NULL });
	CRE_CYC(CYC1, { TA_NULL, { TNFY_ACTTSK, TASK1 }, 1000, 1000 });
	CRE_ALM(ALM1, { TA_NULL, { TNFY_ACTTSK, TASK1 }});

	/* クラスの囲みの中に記述されている［NGKI3187］*/
	DEF_SVC(1, { TA_NULL, extended_svc1, 100 });
  }

  CLASS(CLS_PRC2) {
	/*
	 *  CRE_XXXと異なるクラスの囲みの中に記述するとエラーになる静的API
	 */

	/* 対象タスクが属するクラスの囲みの中に記述されていない［NGKI1084］*/
	SAC_TSK(TASK1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象セマフォが属するクラスの囲みの中に記述されていない［NGKI1479］*/
	SAC_SEM(SEM1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象イベントフラグが属するクラスの囲みの中に記述されていない */
	/* ［NGKI1582］*/
	SAC_FLG(FLG1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象データキューが属するクラスの囲みの中に記述されていない［NGKI1699］*/
	SAC_DTQ(DTQ1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象優先度データキューが属するクラスの囲みの中に記述されていない */
	/* ［NGKI1836］*/
	SAC_PDQ(PDQ1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象ミューテックスが属するクラスの囲みの中に記述されていない */
	/* ［NGKI2048］*/
	SAC_MTX(MTX1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象メッセージバッファが属するクラスの囲みの中に記述されていない */
	/* ［NGKI3337］*/
	SAC_MBF(MBF1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象スピンロックが属するクラスの囲みの中に記述されていない［NGKI2154］*/
	SAC_SPN(SPN1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象固定長メモリプールが属するクラスの囲みの中に記述されていない */
	/* ［NGKI2268］*/
	SAC_MPF(MPF1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象周期通知が属するクラスの囲みの中に記述されていない［NGKI2414］*/
	SAC_CYC(CYC1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* 対象アラーム通知が属するクラスの囲みの中に記述されていない */
	/* ［NGKI2516］*/
	SAC_ALM(ALM1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  }

  /*
   *  クラスの囲みの中に記述しないとエラーになる静的API
   */

  /* クラスの囲みの中に記述されていない［NGKI1032］*/
  CRE_TSK(TASK2, { TA_NULL, 2, task2, MID_PRIORITY, STACK_SIZE, NULL });

  /* クラスの囲みの中に記述されていない［NGKI1459］*/
  CRE_SEM(SEM2, { TA_NULL, 1, 1 });

  /* クラスの囲みの中に記述されていない［NGKI1565］*/
  CRE_FLG(FLG2, { TA_NULL, 0U });

  /* クラスの囲みの中に記述されていない［NGKI1672］*/
  CRE_DTQ(DTQ2, { TA_NULL, 10, NULL });

  /* クラスの囲みの中に記述されていない［NGKI1807］*/
  CRE_PDQ(PDQ2, { TA_NULL, 10, 16, NULL });

  /* クラスの囲みの中に記述されていない［NGKI2028］*/
  CRE_MTX(MTX2, { TA_NULL });

  /* クラスの囲みの中に記述されていない［NGKI3306］*/
  CRE_MBF(MBF2, { TA_NULL, 10, TSZ_MBFMB(10,10), NULL });

  /* クラスの囲みの中に記述されていない［NGKI2135］*/
  CRE_SPN(SPN2, { TA_NULL });

  /* クラスの囲みの中に記述されていない［NGKI2228］*/
  CRE_MPF(MPF2, { TA_NULL, 10, 100, NULL, NULL });

  /* クラスの囲みの中に記述されていない［NGKI2387］*/
  CRE_CYC(CYC2, { TA_NULL, { TNFY_ACTTSK, TASK1 }, 1000, 1000 });

  /* クラスの囲みの中に記述されていない［NGKI2495］*/
  CRE_ALM(ALM2, { TA_NULL, { TNFY_ACTTSK, TASK1 }});

  /* クラスの囲みの中に記述されていない［NGKI2971］*/
  CFG_INT(INTNO1, { TA_NULL, TMAX_INTPRI });
  CFG_INT(INTNO3, { TA_NULL, TMAX_INTPRI });

  /* クラスの囲みの中に記述されていない［NGKI3002］*/
  CRE_ISR(ISR1, { TA_NULL, 1, INTNO3, isr1, 1 });

  /* クラスの囲みの中に記述されていない［NGKI3054］*/
  DEF_INH(INHNO1, { TA_NULL, int1_handler });

  /* クラスの囲みの中に記述されていない［NGKI3133］*/
  DEF_EXC(CPUEXC1, { TA_NULL, cpuexc1_handler });

  /* クラスの囲みの中に記述されていない［NGKI3214］*/
  DEF_ICS({ 10 * STACK_SIZE, istack });

  /*
   *  属するクラスの指定が有効範囲外の場合にエラーになる静的API
   *
   *  DEF_ICSは複数記述できないため，ここからは除く．
   */
  CLASS(CLS_LARGE) {
	/* 属するクラスの指定が有効範囲外［NGKI1031］*/
	CRE_TSK(TASK3, { TA_NULL, 3, task3, MID_PRIORITY, STACK_SIZE, NULL });

	/* 属するクラスの指定が有効範囲外［NGKI1458］*/
	CRE_SEM(SEM3, { TA_NULL, 1, 1 });

	/* 属するクラスの指定が有効範囲外［NGKI1564］*/
	CRE_FLG(FLG3, { TA_NULL, 0U });

	/* 属するクラスの指定が有効範囲外［NGKI1671］*/
	CRE_DTQ(DTQ3, { TA_NULL, 10, NULL });

	/* 属するクラスの指定が有効範囲外［NGKI1806］*/
	CRE_PDQ(PDQ3, { TA_NULL, 10, 16, NULL });

	/* 属するクラスの指定が有効範囲外［NGKI2027］*/
	CRE_MTX(MTX3, { TA_NULL });

	/* 属するクラスの指定が有効範囲外［NGKI3305］*/
	CRE_MBF(MBF3, { TA_NULL, 10, TSZ_MBFMB(10,10), NULL });

	/* 属するクラスの指定が有効範囲外［NGKI2134］*/
	CRE_SPN(SPN3, { TA_NULL });

	/* 属するクラスの指定が有効範囲外［NGKI2227］*/
	CRE_MPF(MPF3, { TA_NULL, 10, 100, NULL, NULL });

	/* 属するクラスの指定が有効範囲外［NGKI2386］*/
	CRE_CYC(CYC3, { TA_NULL, { TNFY_ACTTSK, TASK1 }, 1000, 1000 });

	/* 属するクラスの指定が有効範囲外［NGKI2494］*/
	CRE_ALM(ALM3, { TA_NULL, { TNFY_ACTTSK, TASK1 }});

	/* 属するクラスの指定が有効範囲外［NGKI5103］*/
	DEF_SRG("ROM", "RAM");

	/* 属するクラスの指定が有効範囲外［NGKI5104］*/
	ATT_SEC(".test_sec", { TA_NULL });

	/* 属するクラスの指定が有効範囲外［NGKI5105］*/
	ATT_MOD("test.o");

	/* 属するクラスの指定が有効範囲外［NGKI2970］*/
	CFG_INT(INTNO2, { TA_NULL, TMAX_INTPRI });
	CFG_INT(INTNO4, { TA_NULL, TMAX_INTPRI });

	/* 属するクラスの指定が有効範囲外［NGKI3001］*/
	CRE_ISR(ISR2, { TA_NULL, 2, INTNO4, isr2, 1 });

	/* 属するクラスの指定が有効範囲外［NGKI3053］*/
	DEF_INH(INHNO2, { TA_NULL, int2_handler });

	/* 属するクラスの指定が有効範囲外［NGKI3132］*/
	DEF_EXC(CPUEXC2, { TA_NULL, cpuexc2_handler });

	/* 属するクラスの指定が有効範囲外［NGKI5164］*/
	ATT_INI({ TA_NULL, 2, initialize2_routine });

	/* 属するクラスの指定が有効範囲外［NGKI5165］*/
	ATT_TER({ TA_NULL, 2, terminate2_routine });
  }
}

CLASS(CLS_PRC1) {
	/*
	 *  クラスの囲みの中に記述するとエラーになる静的API
	 */

	/* クラスの囲みの中に記述されている［NGKI3260］*/
	ATT_REG("REG1", { TA_NULL, 0x80000000, 0x10000000 });

	/* クラスの囲みの中に記述されている［NGKI5212］*/
	ATT_MEM({ TA_NULL, 0xf0000000, 0x1000000 });

	/* クラスの囲みの中に記述されている［NGKI5213］*/
	ATT_PMA({ TA_NULL, 0xf0000000, 0x1000000, 0xf0000000 });

	/* クラスの囲みの中に記述されている［NGKI5014］*/
	DEF_SCY({ 10000 });

	/* クラスの囲みの中に記述されている［NGKI5023］*/
	CRE_SOM(SOM1, { TA_INISOM, SOM1 });
	CRE_SOM(SOM2, { TA_NULL, SOM1 });
}

DOMAIN(DOM1) {
}

/* クラスの囲みの中に記述されていない［NGKI5042］*/
ATT_TWD({ DOM1, SOM1, 1, 4000 });

CLASS(CLS_LARGE) {
	/* 属するクラスの指定が有効範囲外［NGKI5107］*/
	ATT_TWD({ DOM1, SOM2, 1, 5000 });
}
