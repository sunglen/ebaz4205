/*
 *		手動メモリ配置の場合のパス2でのエラー検出のテスト(1)
 *
 *  $Id: pass2_mml1.cfg 645 2019-12-09 16:50:28Z ertl-hiro $
 */

#include "cfg_common.h"

/* 手動メモリ配置の場合に，ATT_REGを使用した場合（警告）［NGKI3909］*/
ATT_REG("ROM1", { TA_NOWRITE, 0x02000000, 0x00800000 });

DOMAIN(DOM1) {
  /* 手動メモリ配置の場合に，DEF_SRGを使用した場合（警告）［NGKI3910］*/
  DEF_SRG("ROM1", "RAM");

  /* 手動メモリ配置の場合に，ATT_SECを使用した場合［NGKI3911］*/
  ATT_SEC(".text_sec", { TA_NULL });

  /* 手動メモリ配置の場合に，ATT_MODを使用した場合［NGKI3913］［NGKI2861］*/
  ATT_MOD("test.o");

  /* baseやsizeに，ターゲット定義の制約に合致しない先頭番地やサイズを */ 
  /* 指定した時（base+sizeがアドレスの上限を超える場合）［NGKI2880］*/
  ATT_MEM({ TA_NULL, 0xff000000, 0x2000000 });

  CLASS(CLS_PRC1) {
	/* 保護機能対応カーネルで手動メモリ配置の場合で，生成するタスク */
	/* がユーザタスクの場合に，stkがNULLであった場合や，stkの記述を */
	/* 省略した場合［NGKI3907］*/
	CRE_TSK(TASK1, { TA_NULL, 1, task1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK2, { TA_NULL, 2, task2, MID_PRIORITY, STACK_SIZE });

	/* 保護機能対応カーネルで手動メモリ配置の場合で，カーネルドメイン */
	/* に属し，アクセス許可ベクタがデフォルトの値の固定長メモリプール */
	/* 以外に対して，mpfをNULLとしたり，静的APIにおいてmpfの記述を省略 */
	/* した場合［NGKI3908］*/
	CRE_MPF(MPF1, { TA_NULL, 10, 100, NULL, NULL });
	CRE_MPF(MPF2, { TA_NULL, 10, 100 });

	/* stkやstkszにターゲット定義の制約に合致しない先頭番地やサイズを */
	/* 指定した時［NGKI1056］*/
	CRE_TSK(TASK3, { TA_NULL, 3, task3, MID_PRIORITY, STACK_SIZE, 0x03000001 });
	CRE_TSK(TASK4, { TA_NULL, 4, task4, MID_PRIORITY, 1, 0x03100000 });
  }
}

KERNEL_DOMAIN {
  CLASS(CLS_PRC1) {
	/* 保護機能対応カーネルで手動メモリ配置の場合で，カーネルドメイン */
	/* に属し，アクセス許可ベクタがデフォルトの値の固定長メモリプール */
	/* 以外に対して，mpfをNULLとしたり，静的APIにおいてmpfの記述を省略 */
	/* した場合［NGKI3908］*/
	CRE_MPF(MPF3, { TA_NULL, 10, 100, NULL, NULL });
	SAC_MPF(MPF3, { TACP_SHARED, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	CRE_MPF(MPF4, { TA_NULL, 10, 100 });
	SAC_MPF(MPF4, { TACP_SHARED, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  }
}
