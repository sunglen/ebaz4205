/*
 *		カーネルオブジェクト関連の静的APIのパス2でのエラー検出のテスト(3)
 *
 *  $Id: pass2_obj3.cfg 824 2020-08-05 10:05:20Z ertl-hiro $
 */

#include "cfg_common.h"

KERNEL_DOMAIN {
  CLASS(CLS_PRC1) {
	CRE_TSK(TASK1, { TA_NULL, 1, task1, MID_PRIORITY, STACK_SIZE, NULL });
  }

  /* SAC_SYSで，システム状態のアクセス許可ベクタが設定済み［NGKI2677］*/
  SAC_SYS({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  SAC_SYS({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

  /* svcatrが無効［NGKI3172］*/
  DEF_SVC(1, { 0x10U, extended_svc1, 100 });

  /* fncdが0以下［NGKI3173］*/
  DEF_SVC(0, { TA_NULL, extended_svc2, 100 });
  DEF_SVC(-1, { TA_NULL, extended_svc2, 100 });

  /* ACV_DOMで，保護ドメインのアクセス許可ベクタが設定済み［NGKI3761］*/
  ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
}

DOMAIN(DOM1) {
  /* ACV_DOMで，保護ドメインのアクセス許可ベクタが設定済み［NGKI3761］*/
  ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
}

/* ACV_DOMで，保護ドメインのアクセス許可ベクタが設定済み［NGKI3761］*/
ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
ACV_DOM({ TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

DEF_SCY({ 10000 });

/* somatrが無効［NGKI5021］*/
CRE_SOM(SOM1, { 0x10U });

/* TA_INISOM属性のシステム動作モードが設定済み［NGKI5025］*/
CRE_SOM(SOM2, { TA_INISOM });
CRE_SOM(SOM3, { TA_INISOM });

CLASS(CLS_PRC1) {
	/* domidが有効範囲外［NGKI5043］*/
	ATT_TWD({ 0, SOM1, 1, 4000 });
	ATT_TWD({ 2, SOM1, 2, 4000 });

	/* twdlenが0［NGKI5045］*/
	ATT_TWD({ DOM1, SOM1, 3, 0 });

	/* twdlenがTMAX_TWDTIMより大きい［NGKI5045］*/
	ATT_TWD({ DOM1, SOM1, 4, TMAX_TWDTIM + 1 });

	/* システム動作モードに対して，登録したタイムウィンドウの合計の長 */
	/* さが，システム周期と同じかそれより長い場合［NGKI5049］*/
	ATT_TWD({ DOM1, SOM2, 1, 4000 });
	ATT_TWD({ DOM1, SOM2, 2, 6000 });

	/* nfymodeの値が正しくない［NGKI3730］［NGKI3721］*/
	ATT_TWD({ DOM1, SOM3, 1, 2000, { 0x08U, 5 }});
	ATT_TWD({ DOM1, SOM3, 2, 2000,
						{ TNFY_HANDLER|TENFY_SETVAR, 6, cyclic6_handler }});
	ATT_TWD({ DOM1, SOM3, 3, 2000,
						{ TNFY_ACTTSK|0x80U, TASK1, 4 }});
}
