/*
 *		コンフィギュレータ本体によるパス2でのエラー検出のテスト(2)
 *
 *  $Id: pass2_cfg2.cfg 645 2019-12-09 16:50:28Z ertl-hiro $
 */

#include "cfg_common.h"

DOMAIN(DOM1) {
  CLASS(CLS_PRC1) {
	/* SAC_TSKで，対象タスクが未登録［NGKI1085］*/
	SAC_TSK(TASK1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_TSKで，対象タスクに対してアクセス許可ベクタが設定済み［NGKI1089］*/
	CRE_TSK(TASK2, { TA_NULL, 1, task1, MID_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_TSK(TASK2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_SEMで，対象セマフォが未登録［NGKI1480］*/
	SAC_SEM(SEM1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_SEMで，対象セマフォに対してアクセス許可ベクタが設定済み［NGKI1484］*/
	CRE_SEM(SEM2, { TA_NULL, 1, 1 });
	SAC_SEM(SEM2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_SEM(SEM2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_FLGで，対象イベントフラグが未登録［NGKI1583］*/
	SAC_FLG(FLG1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_FLGで，対象イベントフラグに対してアクセス許可ベクタが設定済 */
	/* み［NGKI1587］*/
	CRE_FLG(FLG2, { TA_NULL, 0x00 });
	SAC_FLG(FLG2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_FLG(FLG2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_DTQで，対象データキューが未登録［NGKI1700］*/
	SAC_DTQ(DTQ1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_DTQで，対象データキューに対してアクセス許可ベクタが設定済み */
	/* ［NGKI1704］*/
	CRE_DTQ(DTQ2, { TA_NULL, 0, NULL });
	SAC_DTQ(DTQ2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_DTQ(DTQ2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_PDQで，対象優先度データキューが未登録［NGKI1837］*/
	SAC_PDQ(PDQ1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_PDQで，対象優先度データキューに対してアクセス許可ベクタが設 */
	/* 定済み［NGKI1841］*/
	CRE_PDQ(PDQ2, { TA_NULL, 0, 16, NULL });
	SAC_PDQ(PDQ2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_PDQ(PDQ2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_MTXで，対象ミューテックスが未登録［NGKI2049］*/
	SAC_MTX(MTX1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_MTXで，対象ミューテックスに対してアクセス許可ベクタが設定済 */
	/* み［NGKI2053］*/
	CRE_MTX(MTX2, { TA_NULL });
	SAC_MTX(MTX2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_MTX(MTX2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_MPFで，対象固定長メモリプールが未登録［NGKI2269］*/
	SAC_MPF(MPF1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_MPFで，対象固定長メモリプールに対してアクセス許可ベクタが設 */
	/* 定済み［NGKI2273］*/
	CRE_MPF(MPF2, { TA_NULL, 10, 10, NULL, NULL });
	SAC_MPF(MPF2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_MPF(MPF2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_CYCで，対象周期通知が未登録［NGKI2415］*/
	SAC_CYC(CYC1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_CYCで，対象周期通知に対してアクセス許可ベクタが設定済み［NGKI2419］*/
	CRE_CYC(CYC2, { TA_NULL, { TNFY_HANDLER, 0, cyclic2_handler }, 10, 0 });
	SAC_CYC(CYC2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_CYC(CYC2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_ALMで，対象アラーム通知が未登録［NGKI2517］*/
	SAC_ALM(ALM1, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	/* SAC_ALMで，対象アラーム通知に対してアクセス許可ベクタが設定済み */
	/* ［NGKI2521］*/
	CRE_ALM(ALM2, { TA_NULL, { TNFY_HANDLER, 0, alarm2_handler }});
	SAC_ALM(ALM2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	SAC_ALM(ALM2, { TACP_KERNEL, TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  }
}

KERNEL_DOMAIN {
	/* DEF_SVCで，拡張サービスコールが定義済み［NGKI3181］*/
	DEF_SVC(3, { TA_NULL, extended_svc3, 100 });
	DEF_SVC(3, { TA_NULL, extended_svc3, 100 });
}

DEF_SCY({ 10000 });
CRE_SOM(SOM1, { TA_INISOM });

CLASS(CLS_PRC1) {
	/* somidが不正［NGKI5044］*/
	ATT_TWD({ DOM1, TASK1, 1, 4000 });
}
