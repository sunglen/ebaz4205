/* 
 *		ATT_MODのテスト(1)
 *
 *  $Id: cfg_attmod1.cfg 645 2019-12-09 16:50:28Z ertl-hiro $
 */

#include "cfg_common.h"

//	== target_mem.cfg ==
//	ATT_REG("ROM", { TA_NOWRITE, 0x01000000, 0x00800000 });
//	ATT_REG("RAM", { TA_NULL, 0x01800000, 0x00800000 });
//	DEF_SRG("ROM", "RAM");
//	}
//
//	== target_timer.cfg ==
//	4つのプロセッサに対して，高分解能タイマドライバとタイムウィンドウ
//	タイマドライバのための，初期化ルーチン，終了処理ルーチン，割込みハ
//	ンドラの登録を行う．
//
//	== target_ipi.cfg ==
//	4つのプロセッサに対して，ディスパッチ要求，カーネル終了要求，高分
//	解能タイマ設定要求，システム周期開始要求の各プロセッサ間割込みの登
//	録を行う．

ATT_REG("ROM2", { TA_NOWRITE, 0x02000000, 0x00800000 });
ATT_REG("RAM2", { TA_NULL, 0x02800000, 0x00800000 });

ATT_REG("ROM3", { TA_NOWRITE, 0x03000000, 0x00800000 });
ATT_REG("RAM3", { TA_NULL, 0x03800000, 0x00800000 });

DOMAIN(DOM1) {
  DEF_SRG("ROM2", "RAM2");
  CLASS(CLS_PRC1) {
	CRE_TSK(TASK1, { TA_NULL, 1, task1_1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK1_0, { TA_NULL, 1, task0_1, MID_PRIORITY, STACK_SIZE, NULL });
  }
  ATT_MOD("test_attmod1.o");
}

DOMAIN(DOM2) {
  CLASS(CLS_PRC1) {
	CRE_TSK(TASK2, { TA_NULL, 1, task2_1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK2_0, { TA_NULL, 1, task0_1, MID_PRIORITY, STACK_SIZE, NULL });
  }
  ATT_MOD("test_attmod2.o");
}

KERNEL_DOMAIN {
  DEF_SRG("ROM3", "RAM3");
  CLASS(CLS_PRC1) {
	CRE_TSK(TASK3, { TA_NULL, 1, task3_1, MID_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK3_0, { TA_NULL, 1, task0_1, MID_PRIORITY, STACK_SIZE, NULL });
  }
  ATT_MOD("test_attmod3.o");
}

ATT_MOD("cfg_attmod1.o");
ATT_MOD("libc.a");
