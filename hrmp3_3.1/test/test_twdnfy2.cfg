/*
 *		タイムウィンドウ通知に関するテスト(2)のシステムコンフィギュレー
 *		ションファイル
 *
 *  $Id: test_twdnfy2.cfg 702 2019-12-29 06:27:02Z ertl-hiro $
 */
INCLUDE("test_common1.cfg");

#include "test_common.h"

DEF_SCY({ 20 * TEST_TIME_CP });
CRE_SOM(SOM1, { TA_INISOM });
CRE_SOM(SOM2, { TA_NULL });

CLASS(CLS_PRC1) {
  ATT_TWD({ DOM1, SOM1, 1, 5 * TEST_TIME_CP });
  ATT_TWD({ DOM2, SOM1, 2, 5 * TEST_TIME_CP, { TNFY_ACTTSK, TASK2 }});

  ATT_TWD({ DOM2, SOM2, 1, 5 * TEST_TIME_CP, { TNFY_ACTTSK, TASK5 }});

  DOMAIN(DOM1) {
	CRE_TSK(TASK1, { TA_ACT, 1, task1, LOW_PRIORITY, STACK_SIZE, NULL });
  }
  DOMAIN(DOM2) {
	CRE_CYC(CYC1, { TA_STA, { TNFY_ACTTSK, TASK3 },
									20 * TEST_TIME_CP, 5 * TEST_TIME_CP });
	CRE_ALM(ALM1, { TA_NULL, { TNFY_ACTTSK, TASK6 }});
  }
  KERNEL_DOMAIN {
	CRE_TSK(TASK2, { TA_NULL, 2, task2, MID_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK2, { TACP(DOM2), TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	CRE_TSK(TASK3, { TA_NULL, 3, task3, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK3, { TACP(DOM2), TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });

	CRE_TSK(TASK4, { TA_NULL, 4, task4, LOW_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(TASK5, { TA_NULL, 5, task5, MID_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK5, { TACP(DOM2), TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	CRE_TSK(TASK6, { TA_NULL, 6, task6, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK6, { TACP(DOM2), TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
  }
}
KERNEL_DOMAIN {
	SAC_SYS({ TACP(DOM1), TACP_KERNEL, TACP_KERNEL, TACP_KERNEL });
	DEF_SVC(TFN_EXTSVC1, { TA_NULL, extsvc1_routine, STACK_SIZE / 4 });
}
ATT_MOD("test_twdnfy2.o");

INCLUDE("test_common2.cfg");
