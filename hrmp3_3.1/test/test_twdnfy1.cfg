/*
 *		タイムウィンドウ通知に関するテスト(1)のシステムコンフィギュレー
 *		ションファイル
 *
 *  $Id: test_twdnfy1.cfg 673 2019-12-15 17:57:49Z ertl-hiro $
 */
INCLUDE("test_common1.cfg");

#include "test_common.h"

DEF_SCY({ 20 * TEST_TIME_CP });
CRE_SOM(SOM1, { TA_INISOM });
CRE_SOM(SOM2, { TA_NULL });

CLASS(CLS_PRC1) {
  ATT_TWD({ DOM1, SOM1, 1, 5 * TEST_TIME_CP, { TNFY_ACTTSK, TASK11 }});
  ATT_TWD({ DOM2, SOM1, 2, 5 * TEST_TIME_CP, { TNFY_WUPTSK, TASK2 }});

  ATT_TWD({ DOM1, SOM2, 1, 1, { TNFY_ACTTSK, TASK13 }});
  ATT_TWD({ DOM2, SOM2, 2, 5 * TEST_TIME_CP, { TNFY_WUPTSK, TASK2 }});
  ATT_TWD({ DOM1, SOM2, 3, 5 * TEST_TIME_CP });

  DOMAIN(DOM1) {
	CRE_TSK(TASK11, { TA_NULL, 1, task11, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK11, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_TSK(TASK12, { TA_NULL, 1, task12, MID_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK12, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_TSK(TASK13, { TA_NULL, 1, task13, HIGH_PRIORITY, STACK_SIZE, NULL });
	SAC_TSK(TASK13, { TACP_SHARED, TACP_SHARED, TACP_KERNEL, TACP_SHARED });
	CRE_CYC(CYC11, { TA_STA, { TNFY_ACTTSK, TASK12 },
									40 * TEST_TIME_CP, 20 * TEST_TIME_CP });
  }
  DOMAIN(DOM2) {
	CRE_TSK(TASK2, { TA_ACT, 1, task2, HIGH_PRIORITY, STACK_SIZE, NULL });
  }
  KERNEL_DOMAIN {
	SAC_SYS({ TACP_SHARED, TACP_KERNEL, TACP_KERNEL, TACP_SHARED });
  }
}
ATT_MOD("test_twdnfy1.o");

INCLUDE("test_common2.cfg");
